{"version":3,"sources":["www/lib/freezeReducer.js","www/ducks/alert/actions/deleteAlert.js","www/ducks/alert/reducer/reduceDeleteAlert.js","www/ducks/alert/actions/replaceAlert.js","www/ducks/alert/reducer/reduceReplaceAlert.js","www/ducks/alert/reducer/index.js","www/ducks/blog/actions/setPost.js","www/ducks/blog/reducer/reduceSetPost.js","www/ducks/blog/reducer/index.js","www/ducks/blog/actions/fetchPostList.js","www/lib/api.js","www/ducks/blog/middleware/whenFetchPostList.js","www/ducks/blog/actions/fetchPost.js","www/ducks/blog/middleware/whenFetchPost.js","www/ducks/blog/middleware/index.js","www/ducks/game/actions/fetchGame.js","www/ducks/game/actions/loginGame.js","www/ducks/game/actions/newGame.js","www/ducks/game/actions/replaceGame.js","www/ducks/game/middleware/whenFetchGame.js","www/ducks/game/middleware/whenLoginGame.js","www/ducks/game/middleware/whenNewGame.js","www/ducks/game/actions/compileGame.js","www/ducks/game/middleware/whenCompileGame.js","www/ducks/game/middleware/index.js","www/ducks/game/actions/logoutGame.js","www/ducks/game/reducer/index.js","www/ducks/game/reducer/reduceLogoutGame.js","www/ducks/game/reducer/reduceReplaceGame.js","www/lib/groupBy.js","www/lib/indexBy.js","www/ducks/gameCommands/actions/setCommand.js","www/ducks/gameCommands/reducer/index.js","www/ducks/gameCommands/reducer/reduceReplaceGame.js","www/ducks/gameCommands/reducer/reduceSetCommand.js","www/ducks/gameCommands/actions/saveCommands.js","www/ducks/gameCommands/selectors/getCommands.js","www/ducks/game/selectors/getGame.js","www/ducks/game/selectors/getPlayerId.js","www/ducks/gameCommands/middleware/whenSaveCommands.js","www/ducks/gameCommands/middleware/index.js","www/ducks/view/actions/setView.js","www/ducks/gameView/middleware/whenReplaceGame.js","www/ducks/gameView/middleware/index.js","www/ducks/view/actions/replaceView.js","www/ducks/view/reducer/reduceReplaceView.js","www/ducks/view/reducer/reduceSetView.js","www/ducks/view/reducer/index.js","www/ducks/index.js","www/ducks/createDucksStore.js","www/lib/useSelect.js","www/ducks/view/selectors/getView.js","www/ducks/view/components/makeSubView.js","www/ducks/blog/selectors/getBlog.js","www/ducks/blog/selectors/getPost.js","www/lib/useDispatch.js","www/components/Button.js","www/components/LinkButton.js","www/views/blog/ShowPost.js","www/ducks/blog/selectors/listPosts.js","www/ducks/view/components/Link.js","www/views/blog/ListPosts.js","www/views/blog/BlogView.js","www/views/home/HomeView.js","www/lib/useInput.js","www/lib/useSubmitDispatch.js","www/views/login/LoginView.js","www/ducks/game/selectors/hasPlayer.js","www/ducks/game/selectors/getMap.js","www/ducks/game/selectors/listEntities.js","www/ducks/game/selectors/getEntitiesByCoordinates.js","www/ducks/game/selectors/listMapCoordinates.js","www/views/map/mapConstants.js","www/ducks/game/selectors/listEntitiesAtCoordinate.js","www/ducks/game/selectors/getEntitiesByCoordinatesByType.js","www/views/map/MapCell.js","www/views/map/MapView.js","www/ducks/gameCommands/selectors/getEntityCommands.js","www/ducks/gameCommands/selectors/getEntityCommand.js","www/ducks/gameCommands/hooks/useCommandValue.js","www/ducks/gameCommands/hooks/useCommandInput.js","www/entities/star/StarCommand.js","www/entities/star/StarDescription.js","www/entities/star/index.js","www/entities/ship/MoveShipCommand.js","www/entities/ship/ShipCommand.js","www/entities/ship/ShipDescription.js","www/entities/ship/index.js","www/entities/descriptors.js","www/entities/Entity.js","www/entities/Entities.js","www/views/cell/CellView.js","www/views/RootView.js","www/views/play/PlayView.js","www/views/game/GameView.js","www/views/new/NewView.js","www/layout/Header.js","www/layout/Version.js","www/ducks/alert/selectors/getAlert.js","www/ducks/alert/components/Alert.js","www/layout/AppLayout.js","www/serviceWorker.js","www/index.js","www/makeApp.js"],"names":["freezeds","WeakSet","freezeReducer","reduce","state","action","freezeState","has","add","Object","keys","forEach","k","val","freeze","DELETE_ALERT","deleteAlert","type","reduceDeleteAlert","REPLACE_ALERT","replaceAlert","text","reduceReplaceAlert","reduceAlert","SET_POST","setPost","post","reduceSetPost","id","reduceBlog","FETCH_POST_LIST","fetchPostList","api","get","url","options","fetch","method","headers","response","json","result","ok","Promise","reject","status","data","put","body","JSON","stringify","delete","store","a","list","p","dispatch","whenFetchPostList","FETCH_POST","fetchPost","postId","split","filter","line","test","join","whenFetchPost","blogMiddleware","next","FETCH_GAME","fetchGame","playerId","LOGIN_GAME","loginGame","NEW_GAME","newGame","mapCode","REPLACE_GAME","replaceGame","game","message","COMPILE_GAME","compileGame","whenCompileGame","whenFetchGame","whenLoginGame","whenNewGame","LOGOUT_GAME","logoutGame","reduceGame","reduceReplaceGame","groupBy","array","keyOrFn","keyFn","o","key","items","push","indexBy","SET_COMMAND","setCommand","entityId","value","command","reduceGameCommands","commands","nextState","reduceSetCommand","SAVE_COMMANDS","saveCommands","getCommands","gameCommands","getGame","getPlayerId","getState","commandsTree","flatMap","values","whenSaveCommands","SET_VIEW","setView","view","root","coordinates","whenReplaceGame","REPLACE_VIEW","replaceView","reduceReplaceView","reduceSetView","reduceView","ducks","alert","blog","gameView","createDucksStore","preloadedState","appCompose","compose","appReducer","ducksReducer","appMiddleware","ducksMiddleware","createStore","applyMiddleware","thunk","useSelect","select","args","selector","useCallback","useSelector","getView","field","makeSubView","Views","null","undefined","viewName","View","makeUnknownView","getBlog","getPost","useDispatch","actionCreator","Error","dispatchRR","useDispatchRR","moreArgs","buttonClass","css","Button","onClick","children","className","cx","linkButtonClass","LinkButton","ShowPost","goHome","goBlog","refresh","useEffect","backToPosts","Container","Breadcrumb","Item","active","title","source","escapeHtml","compareIds","b","listPosts","createSelector","sort","linkClass","Link","followLink","ListPosts","map","BlogView","PlayView","useInput","initialValue","useState","setValue","event","target","useSubmitDispatch","preventDefault","LoginView","onPlayerId","login","Row","Col","md","Form","onSubmit","Group","controlId","Label","Control","onChange","placeholder","variant","hasPlayer","getMap","EMPTY","listEntities","entities","getEntitiesByCoordinates","e","row","column","listMapCoordinates","byCoordinates","CELL_WIDTH","CELL_HEIGHT","listEntitiesAtCoordinate","getEntitiesAtCoordinateByType","cellClassName","MapCell","byType","seeCell","useMemo","style","width","height","left","top","position","contents","data-testid","some","MapView","columns","rows","background","margin","getEntityCommand","getEntityCommands","useCommandValue","fallbackValue","useCommandInput","ev","StarCommand","entity","shipName","onShipName","Card","Body","StarDescription","name","population","Header","priority","ShipCommand","direction","move","moveDown","moveUp","moveLeft","moveRight","ListGroup","ButtonGroup","load","onLoad","ShipDescription","descriptors","star","ship","descriptorsByType","Entity","getDescriptor","Description","Command","currentPlayerId","Entities","descriptor","CellView","back","RootView","Home","HomeView","Play","logged","Game","save","compile","logout","New","onMapCode","submit","Blog","goPlay","goNew","goGame","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","versionClass","Version","pkg","version","getAlert","alertClass","Alert","dismiss","AppLayout","Boolean","window","location","hostname","match","App","makeApp","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.051d0977.chunk.js","sourcesContent":["const freezeds = new WeakSet();\n\nfunction freezeState(state) {\n  if (typeof state === \"object\" && !freezeds.has(state) && state) {\n    freezeds.add(state);\n    Object.keys(state).forEach(k => {\n      const val = state[k];\n      if (typeof val === \"object\") {\n        state[k] = freezeState(val);\n      }\n    });\n  }\n  Object.freeze(state);\n  return state;\n}\n\nfunction freezeReducer(reduce) {\n  return function(state, action) {\n    const nextState = reduce(state, action);\n    return freezeState(nextState);\n  };\n}\n\nexport default freezeReducer;\n","export const DELETE_ALERT = \"alert/DELETE_ALERT\";\nexport function deleteAlert() {\n  return {\n    type: DELETE_ALERT\n  };\n}\n","function reduceDeleteAlert(state, action) {\n  return null;\n}\n\nexport default reduceDeleteAlert;\n","export const REPLACE_ALERT = \"alert/REPLACE_ALERT\";\nexport function replaceAlert(text) {\n  return {\n    type: REPLACE_ALERT,\n    text\n  };\n}\n","function reduceReplaceAlert(state, action) {\n  return {\n    text: action.text\n  };\n}\n\nexport default reduceReplaceAlert;\n","import { DELETE_ALERT } from \"../actions/deleteAlert\";\nimport reduceDeleteAlert from \"./reduceDeleteAlert\";\nimport { REPLACE_ALERT } from \"../actions/replaceAlert\";\nimport reduceReplaceAlert from \"./reduceReplaceAlert\";\n\nfunction reduceAlert(state = null, action) {\n  switch (action.type) {\n    case DELETE_ALERT:\n      return reduceDeleteAlert(state, action);\n    case REPLACE_ALERT:\n      return reduceReplaceAlert(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reduceAlert;\n","export const SET_POST = \"blog/SET_POST\";\nexport function setPost(post) {\n  return {\n    type: SET_POST,\n    post\n  };\n}\n","function reduceSetPost(state, action) {\n  const { post } = action;\n  const { id } = post;\n  return { ...state, [id]: { ...state[id], ...post } };\n}\n\nexport default reduceSetPost;\n","import { SET_POST } from \"../actions/setPost\";\nimport reduceSetPost from \"./reduceSetPost\";\n\nfunction reduceBlog(state = {}, action) {\n  switch (action.type) {\n    case SET_POST:\n      return reduceSetPost(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reduceBlog;\n","export const FETCH_POST_LIST = \"blog/FETCH_POST_LIST\";\nexport function fetchPostList() {\n  return {\n    type: FETCH_POST_LIST\n  };\n}\n","const api = {\n  async get(url, options) {\n    const response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        ...(options && options.headers)\n      },\n      ...options\n    });\n\n    const result = await response.json();\n\n    if (!response.ok)\n      return Promise.reject({\n        status: response.status,\n        data: result\n      });\n\n    return result;\n  },\n\n  async put(url, body, options) {\n    return api.get(url, {\n      method: \"PUT\",\n      body: JSON.stringify(body),\n      ...options\n    });\n  },\n\n  async post(url, body, options) {\n    return api.get(url, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      ...options\n    });\n  },\n\n  async delete(url, options) {\n    return api.get(url, { method: \"DELETE\", ...options });\n  }\n};\n\nexport default api;\n","import api from \"../../../lib/api\";\nimport { setPost } from \"../actions/setPost\";\n\nasync function whenFetchPostList(store, action) {\n  const { list } = await api.get(\"/api/v1/posts\");\n  list.forEach(p => store.dispatch(setPost(p)));\n}\n\nexport default whenFetchPostList;\n","export const FETCH_POST = \"blog/FETCH_POST\";\nexport function fetchPost(postId) {\n  return {\n    type: FETCH_POST,\n    postId\n  };\n}\n","import api from \"../../../lib/api\";\nimport { setPost } from \"../actions/setPost\";\n\nfunction removeOneLineComments(body) {\n  return body\n    .split(\"\\n\")\n    .filter(line => !/^\\s*<!--.*-->\\s*$/.test(line))\n    .join(\"\\n\");\n}\n\nasync function whenFetchPost(store, action) {\n  const { postId } = action;\n  const post = await api.get(`/api/v1/posts/${postId}`);\n  post.body = removeOneLineComments(post.body);\n  store.dispatch(setPost(post));\n}\n\nexport default whenFetchPost;\n","import { FETCH_POST_LIST } from \"../actions/fetchPostList\";\nimport whenFetchPostList from \"./whenFetchPostList\";\nimport { FETCH_POST } from \"../actions/fetchPost\";\nimport whenFetchPost from \"./whenFetchPost\";\n\nconst blogMiddleware = state => next => async action => {\n  next(action);\n\n  switch (action.type) {\n    case FETCH_POST:\n      return whenFetchPost(state, action);\n    case FETCH_POST_LIST:\n      return whenFetchPostList(state, action);\n    default: // nothing\n  }\n};\n\nexport default blogMiddleware;\n","export const FETCH_GAME = \"game/FETCH\";\nexport default function fetchGame(playerId) {\n  return {\n    type: FETCH_GAME,\n    playerId,\n  };\n}\n","export const LOGIN_GAME = \"game/LOGIN\";\nexport default function loginGame(playerId) {\n  return {\n    type: LOGIN_GAME,\n    playerId,\n  };\n}\n","export const NEW_GAME = \"game/NEW\";\nexport default function newGame(mapCode) {\n  return {\n    type: NEW_GAME,\n    mapCode\n  };\n}\n","export const REPLACE_GAME = \"game/REPLACE\";\nexport default function replaceGame(game) {\n  return {\n    type: REPLACE_GAME,\n    game,\n  };\n}\n","import api from \"../../../lib/api\";\nimport replaceGame from \"../actions/replaceGame\";\n\nexport default async function whenFetchGame(store, action) {\n  const { playerId } = action;\n  const result = await api.get(`/api/v1/players/${playerId}`);\n  store.dispatch(replaceGame(result));\n}\n","import fetchGame from \"../actions/fetchGame\";\n\nexport default async function whenLoginGame(store, action) {\n  const { playerId } = action;\n  store.dispatch(fetchGame(playerId));\n}\n","import api from \"../../../lib/api\";\nimport { replaceAlert } from \"../../alert/actions/replaceAlert\";\n\nexport default async function whenNewGame(store, action) {\n  const { mapCode } = action;\n  try {\n    await api.put(\"/api/v1/game\", { mapCode });\n  } catch (e) {\n    store.dispatch(replaceAlert(e.data.message));\n  }\n}\n","export const COMPILE_GAME = \"game/COMPILE\";\nexport default function compileGame(playerId) {\n  return {\n    type: COMPILE_GAME,\n    playerId,\n  };\n}\n","import api from \"../../../lib/api\";\nimport { replaceAlert } from \"../../alert/actions/replaceAlert\";\nimport replaceGame from \"../actions/replaceGame\";\n\nexport default async function whenCompileGame(store, action) {\n  const { playerId } = action;\n  const result = await api.post(`/api/v1/players/${playerId}/compile`);\n  store.dispatch(replaceAlert(\"Game compiled\"));\n  store.dispatch(replaceGame(result));\n}\n","import { FETCH_GAME } from \"../actions/fetchGame\";\nimport { LOGIN_GAME } from \"../actions/loginGame\";\nimport { NEW_GAME } from \"../actions/newGame\";\nimport whenFetchGame from \"./whenFetchGame\";\nimport whenLoginGame from \"./whenLoginGame\";\nimport whenNewGame from \"./whenNewGame\";\nimport { COMPILE_GAME } from \"../actions/compileGame\";\nimport whenCompileGame from \"./whenCompileGame\";\n\nexport default store => next => action => {\n  next(action);\n\n  switch (action.type) {\n    case COMPILE_GAME:\n      return whenCompileGame(store, action);\n    case FETCH_GAME:\n      return whenFetchGame(store, action);\n    case LOGIN_GAME:\n      return whenLoginGame(store, action);\n    case NEW_GAME:\n      return whenNewGame(store, action);\n    default: // nothing\n  }\n};\n","export const LOGOUT_GAME = \"game/LOGOUT\";\nexport default function logoutGame() {\n  return {\n    type: LOGOUT_GAME,\n  };\n}\n","import { REPLACE_GAME } from \"../actions/replaceGame\";\nimport reduceReplaceGame from \"./reduceReplaceGame\";\nimport { LOGOUT_GAME } from \"../actions/logoutGame\";\nimport reduceLogoutGame from \"./reduceLogoutGame\";\n\nexport default function reduceGame(state = null, action) {\n  switch (action.type) {\n    case LOGOUT_GAME:\n      return reduceLogoutGame(state, action);\n    case REPLACE_GAME:\n      return reduceReplaceGame(state, action);\n    default:\n      return state;\n  }\n}\n","export default function reduceLogoutGame(state, action) {\n  return {};\n}\n","export default function reduceReplaceGame(state, action) {\n  return action.game;\n}\n","/**\n * @param {array} array\n * @param {string | function} keyOrFn\n */\nfunction groupBy(array, keyOrFn = \"id\") {\n  const keyFn = typeof keyOrFn === \"string\" ? o => o[keyOrFn] : keyOrFn;\n  const result = {};\n  array.forEach(o => {\n    const key = keyFn(o);\n    let items = result[key];\n    if (!items) {\n      items = [];\n      result[key] = items;\n    }\n    items.push(o);\n  });\n  return result;\n}\n\nexport default groupBy;\n","function indexBy(array, keyOrFn = \"id\") {\n  const keyFn = typeof keyOrFn === \"string\" ? o => o[keyOrFn] : keyOrFn;\n  const result = {};\n  array.forEach(o => {\n    const key = keyFn(o);\n    result[key] = o;\n  });\n  return result;\n}\n\nexport default indexBy;\n","export const SET_COMMAND = \"gameCommands/SET\";\nexport function setCommand(entityId, type, value) {\n  return {\n    type: SET_COMMAND,\n    command: {\n      entityId,\n      type,\n      value,\n    },\n  };\n}\n","import { REPLACE_GAME } from \"../../game/actions/replaceGame\";\nimport reduceReplaceGame from \"./reduceReplaceGame\";\nimport { SET_COMMAND } from \"../actions/setCommand\";\nimport reduceSetCommand from \"./reduceSetCommand\";\n\nexport default function reduceGameCommands(state = {}, action) {\n  switch (action.type) {\n    case REPLACE_GAME:\n      return reduceReplaceGame(state, action);\n    case SET_COMMAND:\n      return reduceSetCommand(state, action);\n    default:\n      return state;\n  }\n}\n","import groupBy from \"../../../lib/groupBy\";\nimport indexBy from \"../../../lib/indexBy\";\n\nexport default function reduceReplaceGame(state, action) {\n  const { game } = action;\n  const commands = game.commands || [];\n\n  const nextState = groupBy(commands, \"entityId\");\n  Object.keys(nextState).forEach(entityId => {\n    nextState[entityId] = indexBy(nextState[entityId], \"type\");\n  });\n  return nextState;\n}\n","export default function reduceSetCommand(state, action) {\n  const { command } = action;\n  const { entityId, type } = command;\n  return {\n    ...state,\n    [entityId]: {\n      ...state[entityId],\n      [type]: {\n        ...(state[entityId] && state[entityId][type]),\n        ...command,\n      },\n    },\n  };\n}\n","export const SAVE_COMMANDS = \"gameCommands/SAVE\";\nexport function saveCommands() {\n  return {\n    type: SAVE_COMMANDS,\n  };\n}\n","export default function getCommands(state) {\n  return state.gameCommands;\n}\n","export default function getGame(state) {\n  return state.game;\n}\n","import getGame from \"./getGame\";\n\nexport default function getPlayerId(state) {\n  const game = getGame(state);\n  return game && game.playerId;\n}\n","import getCommands from \"../selectors/getCommands\";\nimport getPlayerId from \"../../game/selectors/getPlayerId\";\nimport api from \"../../../lib/api\";\nimport { replaceAlert } from \"../../alert/actions/replaceAlert\";\n\nexport default async function whenSaveCommands(store, action) {\n  const state = store.getState();\n  const commandsTree = getCommands(state);\n  const playerId = getPlayerId(state);\n\n  const commands = Object.keys(commandsTree).flatMap(entityId =>\n    Object.values(commandsTree[entityId]),\n  );\n\n  await api.put(`/api/v1/players/${playerId}/commands`, commands);\n  store.dispatch(replaceAlert(\"Game saved\"));\n}\n","import { SAVE_COMMANDS } from \"../actions/saveCommands\";\nimport whenSaveCommands from \"./whenSaveCommands\";\n\nexport default store => next => action => {\n  next(action);\n\n  switch (action.type) {\n    case SAVE_COMMANDS:\n      return whenSaveCommands(store, action);\n    default: // nothing\n  }\n};\n","export const SET_VIEW = \"view/SET_VIEW\";\nexport function setView(view) {\n  return {\n    type: SET_VIEW,\n    view,\n  };\n}\n","import { setView } from \"../../view/actions/setView\";\n\nexport default async function whenReplaceGame(store, action) {\n  store.dispatch(setView({ root: \"Play\", coordinates: null }));\n}\n","import { REPLACE_GAME } from \"../../game/actions/replaceGame\";\nimport whenReplaceGame from \"./whenReplaceGame\";\n\nexport default store => next => action => {\n  next(action);\n\n  switch (action.type) {\n    case REPLACE_GAME:\n      return whenReplaceGame(store, action);\n    default: // do nothing\n  }\n};\n","export const REPLACE_VIEW = \"view/REPLACE_VIEW\";\nexport function replaceView(view) {\n  return {\n    type: REPLACE_VIEW,\n    view,\n  };\n}\n","function reduceReplaceView(state, action) {\n  const { view } = action;\n  return view;\n}\n\nexport default reduceReplaceView;\n","function reduceSetView(state, action) {\n  const { view } = action;\n  return { ...state, ...view };\n}\n\nexport default reduceSetView;\n","import { REPLACE_VIEW } from \"../actions/replaceView\";\nimport { SET_VIEW } from \"../actions/setView\";\nimport reduceReplaceView from \"./reduceReplaceView\";\nimport reduceSetView from \"./reduceSetView\";\n\nfunction reduceView(state = { root: \"Home\" }, action) {\n  switch (action.type) {\n    case REPLACE_VIEW:\n      return reduceReplaceView(state, action);\n    case SET_VIEW:\n      return reduceSetView(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reduceView;\n","import * as alert from \"./alert/index\";\nimport * as blog from \"./blog/index\";\nimport * as game from \"./game/index\";\nimport * as gameCommands from \"./gameCommands/index\";\nimport * as gameView from \"./gameView/index\";\nimport * as view from \"./view/index\";\n\nconst ducks = {\n  alert,\n  blog,\n  game,\n  gameCommands,\n  gameView,\n  view,\n};\n\nexport default ducks;\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport ducksReducer from \"ducks-reducer\";\nimport ducksMiddleware from \"ducks-middleware\";\nimport freezeReducer from \"../lib/freezeReducer\";\n\nimport ducks from \"./index\";\n\nfunction createDucksStore(preloadedState, appCompose = compose) {\n  const appReducer = freezeReducer(ducksReducer(ducks));\n  const appMiddleware = ducksMiddleware(ducks);\n\n  return createStore(\n    appReducer,\n    preloadedState,\n    appCompose(applyMiddleware(thunk, appMiddleware))\n  );\n}\n\nexport default createDucksStore;\n","import { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nfunction useSelect(select, ...args) {\n  const selector = useCallback(\n    state => select(state, ...args),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [select, ...args]\n  );\n  const value = useSelector(selector);\n\n  return value;\n}\n\nexport default useSelect;\n","function getView(state, field) {\n  return state.view[field];\n}\n\nexport default getView;\n","import React from \"react\";\nimport useSelect from \"../../../lib/useSelect\";\nimport getView from \"../selectors/getView\";\n\nfunction makeSubView(field, Views) {\n  Views.null = Views.null || Views.undefined;\n  Views.undefined = Views.undefined || Views.null;\n\n  function makeUnknownView(viewName) {\n    return () => `Unknown view name \"${viewName}\" for \"${field}\".`;\n  }\n\n  function SubView() {\n    const viewName = useSelect(getView, field);\n    const View = Views[`${viewName}`] || makeUnknownView(viewName);\n\n    return <View />;\n  }\n  return SubView;\n}\n\nexport default makeSubView;\n","function getBlog(state) {\n  return state.blog;\n}\n\nexport default getBlog;\n","import getBlog from \"./getBlog\";\n\nfunction getPost(state, { postId }) {\n  return getBlog(state)[postId];\n}\n\nexport default getPost;\n","import { useCallback } from \"react\";\nimport { useDispatch as useDispatchRR } from \"react-redux\";\n\nfunction useDispatch(actionCreator, ...args) {\n  if (!actionCreator) throw new Error(\"The actionCreator is not a function\");\n  const dispatchRR = useDispatchRR();\n  const dispatch = useCallback(\n    (...moreArgs) => {\n      const action = actionCreator(...args, ...moreArgs);\n      dispatchRR(action);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [actionCreator, ...args]\n  );\n  return dispatch;\n}\n\nexport default useDispatch;\n","import React from \"react\";\nimport { cx, css } from \"emotion\";\n\nexport const buttonClass = css`\n  background: transparent;\n  font-size: inherit;\n  height: 2em;\n  box-sizing: border-box;\n  border: solid var(--light) 2px;\n  color: var(--light);\n  padding: 0 1em;\n  cursor: pointer;\n\n  :focus,\n  :hover {\n    outline: none;\n    color: var(--light);\n    border: solid var(--lightest) 2px;\n  }\n`;\n\nfunction Button({ onClick, children, className = null }) {\n  return (\n    <button className={cx(buttonClass, className)} onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport { cx, css } from \"emotion\";\nimport Button, { buttonClass } from \"./Button\";\n\nexport const linkButtonClass = cx(\n  buttonClass,\n  css`\n    border: none;\n    text-decoration: underline;\n    padding: 0;\n\n    :focus,\n    :hover {\n      border: none;\n      color: var(--lightest);\n    }\n  `\n);\n\nfunction LinkButton({ onClick, children, className = null }) {\n  return (\n    <Button onClick={onClick} className={cx(linkButtonClass, className)}>\n      {children}\n    </Button>\n  );\n}\n\nexport default LinkButton;\n","import React, { useEffect } from \"react\";\nimport { Container, Breadcrumb } from \"react-bootstrap\";\nimport ReactMarkdown from \"react-markdown\";\nimport useSelect from \"../../lib/useSelect\";\nimport getPost from \"../../ducks/blog/selectors/getPost\";\nimport useDispatch from \"../../lib/useDispatch\";\nimport { setView } from \"../../ducks/view/actions/setView\";\nimport LinkButton from \"../../components/LinkButton\";\nimport { fetchPost } from \"../../ducks/blog/actions/fetchPost\";\n\nfunction ShowPost({ postId }) {\n  const post = useSelect(getPost, { postId });\n  const goHome = useDispatch(setView, { root: \"Home\" });\n  const goBlog = useDispatch(setView, { postId: null });\n  const refresh = useDispatch(fetchPost, postId);\n  useEffect(refresh, []);\n\n  const backToPosts = <LinkButton onClick={goBlog}>« Back to posts</LinkButton>;\n\n  return (\n    <Container>\n      <br />\n      <Breadcrumb>\n        <Breadcrumb.Item onClick={goHome}>Home</Breadcrumb.Item>\n        <Breadcrumb.Item onClick={goBlog}>Blog</Breadcrumb.Item>\n        <Breadcrumb.Item active>{post.title}</Breadcrumb.Item>\n      </Breadcrumb>\n      <ReactMarkdown source={post.body} escapeHtml={false} />\n      {backToPosts}\n    </Container>\n  );\n}\n\nexport default ShowPost;\n","import { createSelector } from \"reselect\";\nimport getBlog from \"./getBlog\";\n\nfunction compareIds(a, b) {\n  if (a.id < b.id) return +1;\n  if (a.id > b.id) return -1;\n  return 0;\n}\n\nfunction makeListPosts() {\n  return createSelector(\n    getBlog,\n    blog => Object.values(blog).sort(compareIds),\n  );\n}\n\nconst listPosts = makeListPosts();\nexport default listPosts;\n","import React from \"react\";\nimport { css, cx } from \"emotion\";\nimport useDispatch from \"../../../lib/useDispatch\";\nimport { setView } from \"../actions/setView\";\n\nconst linkClass = css`\n  cursor: pointer;\n  text-decoration: underline;\n  :hover {\n    color: var(--lightest);\n  }\n`;\n\nfunction Link({ children, view, className = null }) {\n  const followLink = useDispatch(setView, view);\n\n  return (\n    <span className={cx(linkClass, className)} onClick={followLink}>\n      {children}\n    </span>\n  );\n}\n\nexport default Link;\n","import React, { useEffect } from \"react\";\nimport { Container, Breadcrumb } from \"react-bootstrap\";\nimport listPosts from \"../../ducks/blog/selectors/listPosts\";\nimport Link from \"../../ducks/view/components/Link\";\nimport useDispatch from \"../../lib/useDispatch\";\nimport { fetchPostList } from \"../../ducks/blog/actions/fetchPostList\";\nimport useSelect from \"../../lib/useSelect\";\nimport { setView } from \"../../ducks/view/actions/setView\";\n\nfunction ListPosts() {\n  const list = useSelect(listPosts);\n  const goHome = useDispatch(setView, { root: \"Home\" });\n  const refresh = useDispatch(fetchPostList);\n  useEffect(refresh, []);\n\n  return (\n    <Container>\n      <br />\n      <Breadcrumb>\n        <Breadcrumb.Item onClick={goHome}>Home</Breadcrumb.Item>\n        <Breadcrumb.Item active>Blog</Breadcrumb.Item>\n      </Breadcrumb>\n      <h1>Latest news</h1>\n      <ul>\n        {list.map(p => (\n          <li key={p.id}>\n            <Link view={{ postId: p.id }}>{p.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </Container>\n  );\n}\n\nexport default ListPosts;\n","import React from \"react\";\nimport useSelect from \"../../lib/useSelect\";\nimport getView from \"../../ducks/view/selectors/getView\";\nimport ShowPost from \"./ShowPost\";\nimport ListPosts from \"./ListPosts\";\n\nfunction BlogView() {\n  const postId = useSelect(getView, \"postId\");\n  if (postId) return <ShowPost postId={postId} />;\n  return <ListPosts />;\n}\n\nexport default BlogView;\n","import React from \"react\";\n\nfunction PlayView() {\n  return <span>home</span>;\n}\n\nexport default PlayView;\n","import { useCallback, useState } from \"react\";\n\nfunction useInput(initialValue = \"\") {\n  const [value, setValue] = useState(initialValue);\n  const onChange = useCallback(event => setValue(event.target.value), []);\n\n  return [value, onChange];\n}\n\nexport default useInput;\n","import { useCallback } from \"react\";\nimport useDispatch from \"./useDispatch\";\n\nfunction useSubmitDispatch(actionCreator, ...args) {\n  const dispatch = useDispatch(actionCreator, ...args);\n  return useCallback(\n    event => {\n      event.preventDefault();\n      dispatch();\n    },\n    [dispatch]\n  );\n}\n\nexport default useSubmitDispatch;\n","import React from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport useInput from \"../../lib/useInput\";\nimport useSubmitDispatch from \"../../lib/useSubmitDispatch\";\nimport loginGame from \"../../ducks/game/actions/loginGame\";\n\nexport default function LoginView() {\n  const [playerId, onPlayerId] = useInput(\"\");\n  const login = useSubmitDispatch(loginGame, playerId);\n\n  return (\n    <Container>\n      <br />\n      <br />\n      <h1>Log in to play</h1>\n      <br />\n      <Row>\n        <Col md={4}>\n          <Form onSubmit={login}>\n            <Form.Group controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={playerId}\n                onChange={onPlayerId}\n                placeholder=\"Enter username\"\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Log in\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import getPlayerId from \"./getPlayerId\";\n\nexport default function hasPlayer(state) {\n  const playerId = getPlayerId(state);\n  return !!playerId;\n}\n","import getGame from \"./getGame\";\n\nexport default function getMap(state) {\n  const game = getGame(state);\n  return game && game.map;\n}\n","import getGame from \"./getGame\";\n\nconst EMPTY = [];\nexport default function listEntities(state) {\n  const game = getGame(state);\n  return (game && game.entities) || EMPTY;\n}\n","import { createSelector } from \"reselect\";\nimport listEntities from \"./listEntities\";\nimport groupBy from \"../../../lib/groupBy\";\n\nfunction makeGetEntitiesByCoordinates() {\n  return createSelector(\n    listEntities,\n    entities => groupBy(entities, e => `${e.row},${e.column}`),\n  );\n}\n\nconst getEntitiesByCoordinates = makeGetEntitiesByCoordinates();\nexport default getEntitiesByCoordinates;\n","import { createSelector } from \"reselect\";\nimport getEntitiesByCoordinates from \"./getEntitiesByCoordinates\";\n\nfunction makeListMapCoordinates() {\n  return createSelector(\n    getEntitiesByCoordinates,\n    byCoordinates =>\n      Object.keys(byCoordinates).map(key => {\n        const { row, column } = byCoordinates[key][0];\n        return { row, column };\n      }),\n  );\n}\n\nconst listMapCoordinates = makeListMapCoordinates();\nexport default listMapCoordinates;\n","export const CELL_WIDTH = 5;\nexport const CELL_HEIGHT = 4;\n","import getEntitiesByCoordinates from \"./getEntitiesByCoordinates\";\n\nconst EMPTY = [];\nexport default function listEntitiesAtCoordinate(state, { row, column }) {\n  return getEntitiesByCoordinates(state)[`${row},${column}`] || EMPTY;\n}\n","import { createSelector } from \"reselect\";\nimport groupBy from \"../../../lib/groupBy\";\nimport listEntitiesAtCoordinate from \"./listEntitiesAtCoordinate\";\n\nfunction makeGetEntitiesAtCoordinateByType() {\n  return createSelector(\n    listEntitiesAtCoordinate,\n    entities => groupBy(entities, \"type\"),\n  );\n}\n\nconst getEntitiesAtCoordinateByType = makeGetEntitiesAtCoordinateByType();\nexport default getEntitiesAtCoordinateByType;\n","import React, { useMemo } from \"react\";\nimport { css } from \"emotion\";\nimport useSelect from \"../../lib/useSelect\";\nimport { CELL_WIDTH, CELL_HEIGHT } from \"./mapConstants\";\nimport listEntitiesAtCoordinate from \"../../ducks/game/selectors/listEntitiesAtCoordinate\";\nimport getEntitiesAtCoordinateByType from \"../../ducks/game/selectors/getEntitiesByCoordinatesByType\";\nimport getPlayerId from \"../../ducks/game/selectors/getPlayerId\";\nimport useDispatch from \"../../lib/useDispatch\";\nimport { setView } from \"../../ducks/view/actions/setView\";\n\nconst cellClassName = css`\n  width: ${CELL_WIDTH}em;\n  height: ${CELL_HEIGHT}em;\n  border: solid 1px rgba(0, 0, 0, 0.5);\n\n  &.yours {\n    background: blue;\n  }\n`;\n\nexport default function MapCell({ row, column }) {\n  const byType = useSelect(getEntitiesAtCoordinateByType, { row, column });\n  const entities = useSelect(listEntitiesAtCoordinate, { row, column });\n  const playerId = useSelect(getPlayerId);\n  const seeCell = useDispatch(setView, { coordinates: { row, column } });\n\n  return useMemo(() => {\n    const style = {\n      width: `${CELL_WIDTH}em`,\n      height: `${CELL_HEIGHT}em`,\n      left: `${CELL_WIDTH * (column - 1)}em`,\n      top: `${CELL_HEIGHT * (row - 1)}em`,\n      position: \"absolute\",\n    };\n\n    const contents = [];\n    if (byType[\"star\"]) {\n      contents.push(\n        <span data-testid=\"star\" key=\"star\">\n          *\n        </span>,\n      );\n    }\n    if (byType[\"ship\"]) {\n      contents.push(\n        <span data-testid=\"ships\" key=\"ships\">\n          »\n        </span>,\n      );\n    }\n\n    let className = cellClassName;\n    if (entities.some(e => e.playerId === playerId)) {\n      className += \" yours\";\n    }\n\n    return (\n      <div\n        data-testid={`${row},${column}`}\n        style={style}\n        className={className}\n        onClick={seeCell}\n        title={`${row},${column}`}\n      >\n        {contents}\n      </div>\n    );\n  }, [row, column, byType, entities, playerId, seeCell]);\n}\n","import React, { useMemo } from \"react\";\nimport useSelect from \"../../lib/useSelect\";\nimport getMap from \"../../ducks/game/selectors/getMap\";\nimport listMapCoordinates from \"../../ducks/game/selectors/listMapCoordinates\";\nimport { CELL_WIDTH, CELL_HEIGHT } from \"./mapConstants\";\nimport MapCell from \"./MapCell\";\n\nexport default function MapView() {\n  const map = useSelect(getMap);\n  const coordinates = useSelect(listMapCoordinates);\n\n  return useMemo(() => {\n    const style = {\n      width: `${CELL_WIDTH * map.columns}em`,\n      height: `${CELL_HEIGHT * map.rows}em`,\n      position: \"relative\",\n      background: \"rgba(255,255,255,.1)\",\n      margin: \"1em auto 0\",\n    };\n\n    return (\n      <div data-testid=\"map-of-the-game\" style={style}>\n        {coordinates.map(({ row, column }) => (\n          <MapCell row={row} column={column} key={`${row},${column}`} />\n        ))}\n      </div>\n    );\n  }, [map, coordinates]);\n}\n","import getCommands from \"./getCommands\";\n\nconst EMPTY = {};\nexport default function getEntityCommands(state, { entityId }) {\n  const commands = getCommands(state);\n  return commands[entityId] || EMPTY;\n}\n","import getEntityCommands from \"./getEntityCommands\";\n\nexport default function getEntityCommand(state, { entityId, type }) {\n  const commands = getEntityCommands(state, { entityId });\n  return commands[type];\n}\n","import useSelect from \"../../../lib/useSelect\";\nimport getEntityCommand from \"../selectors/getEntityCommand\";\nimport useDispatch from \"../../../lib/useDispatch\";\nimport { setCommand } from \"../actions/setCommand\";\n\nexport function useCommandValue(entityId, type, fallbackValue) {\n  const command = useSelect(getEntityCommand, { entityId, type });\n  const value = command ? command.value : fallbackValue;\n  const setValue = useDispatch(setCommand, entityId, type);\n  return [value, setValue];\n}\n","import { useCallback } from \"react\";\nimport { useCommandValue } from \"./useCommandValue\";\n\nexport default function useCommandInput(entityId, type, fallbackValue = \"\") {\n  const [value, setValue] = useCommandValue(entityId, type, fallbackValue);\n  const onChange = useCallback(ev => setValue(ev.target.value), [setValue]);\n  return [value, onChange];\n}\n","import React from \"react\";\nimport { Form, Card } from \"react-bootstrap\";\nimport useCommandInput from \"../../ducks/gameCommands/hooks/useCommandInput\";\n\nexport default function StarCommand({ entity }) {\n  const [shipName, onShipName] = useCommandInput(entity.id, \"BuildShip\");\n\n  return (\n    <>\n      <Card.Body>\n        <Form.Group controlId=\"newShipName\">\n          <Form.Label>New ship name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={shipName}\n            onChange={onShipName}\n            placeholder=\"Ships name\"\n          />\n        </Form.Group>\n      </Card.Body>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nexport default function StarDescription({ entity }) {\n  const { name, population, playerId } = entity;\n\n  return (\n    <>\n      <Card.Header data-testid=\"name\">\n        Star: <span>{name}</span>\n      </Card.Header>\n      <Card.Body>\n        {playerId && (\n          <div data-testid=\"owner\">\n            <strong>Owner</strong>: {playerId}.\n          </div>\n        )}\n        {population != null && (\n          <div data-testid=\"population\">\n            <strong>Population</strong>: {population}.\n          </div>\n        )}\n      </Card.Body>\n    </>\n  );\n}\n","import StarCommand from \"./StarCommand\";\nimport StarDescription from \"./StarDescription\";\n\nconst priority = 1;\nconst type = \"star\";\n\nexport {\n  priority,\n  type,\n  StarCommand as Command,\n  StarDescription as Description,\n};\n","import React, { useCallback } from \"react\";\nimport { ButtonGroup, Button, ListGroup } from \"react-bootstrap\";\nimport { useCommandValue } from \"../../ducks/gameCommands/hooks/useCommandValue\";\n\nexport default function ShipCommand({ entity }) {\n  const [direction, move] = useCommandValue(entity.id, \"MoveShip\");\n  const moveDown = useCallback(() => move(\"down\"), [move]);\n  const moveUp = useCallback(() => move(\"up\"), [move]);\n  const moveLeft = useCallback(() => move(\"left\"), [move]);\n  const moveRight = useCallback(() => move(\"right\"), [move]);\n\n  return (\n    <ListGroup.Item>\n      Move ship:\n      <ButtonGroup>\n        <Button\n          onClick={moveDown}\n          data-testid=\"go-down\"\n          active={direction === \"down\"}\n        >\n          v\n        </Button>\n        <Button\n          onClick={moveUp}\n          data-testid=\"go-up\"\n          active={direction === \"up\"}\n        >\n          ^\n        </Button>\n        <Button\n          onClick={moveLeft}\n          data-testid=\"go-left\"\n          active={direction === \"left\"}\n        >\n          &lt;\n        </Button>\n        <Button\n          onClick={moveRight}\n          data-testid=\"go-right\"\n          active={direction === \"right\"}\n        >\n          &gt;\n        </Button>\n      </ButtonGroup>\n    </ListGroup.Item>\n  );\n}\n","import React from \"react\";\nimport { Form, ListGroup } from \"react-bootstrap\";\nimport useCommandInput from \"../../ducks/gameCommands/hooks/useCommandInput\";\nimport MoveShipCommand from \"./MoveShipCommand\";\n\nexport default function ShipCommand({ entity }) {\n  const [load, onLoad] = useCommandInput(entity.id, \"LoadShip\");\n\n  return (\n    <ListGroup>\n      <ListGroup.Item>\n        <Form.Group controlId=\"shipLoad\">\n          <Form.Label>Load</Form.Label>\n          <Form.Control\n            value={load}\n            onChange={onLoad}\n            placeholder=\"Ships name\"\n          />\n        </Form.Group>\n      </ListGroup.Item>\n      <MoveShipCommand entity={entity} />\n    </ListGroup>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nexport default function ShipDescription({ entity }) {\n  const { name, population } = entity;\n\n  return (\n    <>\n      <Card.Header data-testid=\"name\">\n        Ship: <span>{name}</span>\n      </Card.Header>\n      <Card.Body>\n        {population != null && (\n          <div data-testid=\"population\">\n            <strong>Population</strong>: {population}.\n          </div>\n        )}\n      </Card.Body>\n    </>\n  );\n}\n","import ShipCommand from \"./ShipCommand\";\nimport ShipDescription from \"./ShipDescription\";\n\nconst priority = 5;\nconst type = \"ship\";\n\nexport {\n  priority,\n  type,\n  ShipCommand as Command,\n  ShipDescription as Description,\n};\n","import * as star from \"./star/index\";\nimport * as ship from \"./ship/index\";\nimport indexBy from \"../lib/indexBy\";\n\nconst descriptors = [\n  star,\n  ship,\n  //\n].sort((a, b) => a.priority - b.priority);\n\nconst descriptorsByType = indexBy(descriptors, \"type\");\n\nfunction getDescriptor(entity) {\n  return descriptorsByType[entity.type];\n}\n\nexport { descriptors as default, descriptorsByType, getDescriptor };\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { getDescriptor } from \"./descriptors\";\nimport useSelect from \"../lib/useSelect\";\nimport getPlayerId from \"../ducks/game/selectors/getPlayerId\";\n\nexport default function Entity({ entity }) {\n  const { name, type, playerId } = entity;\n  const { Description, Command } = getDescriptor(entity);\n  const currentPlayerId = useSelect(getPlayerId);\n\n  return (\n    <Card data-testid={`${type}-${name}`}>\n      <Description entity={entity} />\n      {playerId === currentPlayerId && <Command entity={entity} />}\n    </Card>\n  );\n}\n","import React from \"react\";\nimport descriptors from \"./descriptors\";\nimport Entity from \"./Entity\";\n\nexport default function Entities({ entities }) {\n  return (\n    <>\n      {descriptors.flatMap(descriptor =>\n        entities\n          .filter(e => e.type === descriptor.type)\n          .map(entity => <Entity entity={entity} key={entity.id} />),\n      )}\n    </>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport useSelect from \"../../lib/useSelect\";\nimport getView from \"../../ducks/view/selectors/getView\";\nimport useDispatch from \"../../lib/useDispatch\";\nimport { setView } from \"../../ducks/view/actions/setView\";\nimport listEntitiesAtCoordinate from \"../../ducks/game/selectors/listEntitiesAtCoordinate\";\nimport Entities from \"../../entities/Entities\";\n\nexport default function CellView() {\n  const back = useDispatch(setView, { coordinates: null });\n  const coordinates = useSelect(getView, \"coordinates\");\n  const entities = useSelect(listEntitiesAtCoordinate, coordinates);\n\n  return useMemo(() => {\n    return (\n      <Container data-testid=\"cell-entities\">\n        <br />\n        <Row>\n          <Col md={4}>\n            <button onClick={back}>Back</button>\n            <Entities entities={entities} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }, [entities, back]);\n}\n","import makeSubView from \"../ducks/view/components/makeSubView\";\nimport BlogView from \"./blog/BlogView\";\nimport HomeView from \"./home/HomeView\";\nimport NewView from \"./new/NewView\";\nimport PlayView from \"./play/PlayView\";\nimport GameView from \"./game/GameView\";\n\nconst RootView = makeSubView(\"root\", {\n  Home: HomeView,\n  Play: PlayView,\n  Game: GameView,\n  New: NewView,\n  Blog: BlogView,\n});\n\nexport default RootView;\n","import React from \"react\";\nimport LoginView from \"../login/LoginView\";\nimport useSelect from \"../../lib/useSelect\";\nimport hasPlayer from \"../../ducks/game/selectors/hasPlayer\";\nimport MapView from \"../map/MapView\";\nimport getView from \"../../ducks/view/selectors/getView\";\nimport CellView from \"../cell/CellView\";\n\nfunction PlayView() {\n  const logged = useSelect(hasPlayer);\n  const coordinates = useSelect(getView, \"coordinates\");\n\n  if (!logged) return <LoginView />;\n  if (!coordinates) return <MapView />;\n  return <CellView />;\n}\n\nexport default PlayView;\n","import React from \"react\";\nimport useSelect from \"../../lib/useSelect\";\nimport getPlayerId from \"../../ducks/game/selectors/getPlayerId\";\nimport useDispatch from \"../../lib/useDispatch\";\nimport { saveCommands } from \"../../ducks/gameCommands/actions/saveCommands\";\nimport logoutGame from \"../../ducks/game/actions/logoutGame\";\nimport compileGame from \"../../ducks/game/actions/compileGame\";\n\nexport default function GameView() {\n  const playerId = useSelect(getPlayerId);\n  const save = useDispatch(saveCommands);\n  const compile = useDispatch(compileGame, playerId);\n  const logout = useDispatch(logoutGame);\n\n  if (!playerId) return \"There is no game loaded\";\n  return (\n    <div>\n      <button onClick={save}>Save game</button>\n      <button onClick={compile}>Compile game</button>\n      <button onClick={logout}>Logout</button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport useInput from \"../../lib/useInput\";\nimport useSubmitDispatch from \"../../lib/useSubmitDispatch\";\nimport newGame from \"../../ducks/game/actions/newGame\";\n\nexport default function NewView() {\n  const [mapCode, onMapCode] = useInput(\"\");\n  const submit = useSubmitDispatch(newGame, mapCode);\n\n  return (\n    <Container>\n      <br />\n      <br />\n      <h1>Create a new universe</h1>\n      <br />\n      <Row>\n        <Col md={4}>\n          <Form onSubmit={submit}>\n            <Form.Group controlId=\"mapCode\">\n              <Form.Label>Map code</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={mapCode}\n                onChange={onMapCode}\n                placeholder=\"Enter the map code\"\n              />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Create\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\n\nimport useDispatch from \"../lib/useDispatch\";\nimport { replaceView } from \"../ducks/view/actions/replaceView\";\nimport useSelect from \"../lib/useSelect\";\nimport hasPlayer from \"../ducks/game/selectors/hasPlayer\";\n\nfunction Header() {\n  const goHome = useDispatch(replaceView, { root: \"Home\" });\n  const goPlay = useDispatch(replaceView, { root: \"Play\" });\n  const goNew = useDispatch(replaceView, { root: \"New\" });\n  const goBlog = useDispatch(replaceView, { root: \"Blog\" });\n  const logged = useSelect(hasPlayer);\n  const goGame = useDispatch(replaceView, { root: \"Game\" });\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" data-testid=\"header\">\n      <Container>\n        <Navbar.Brand onClick={goHome}>●▶ PLANETS GAME</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={goHome}>Home</Nav.Link>\n            <Nav.Link onClick={goPlay}>Play</Nav.Link>\n            {logged && <Nav.Link onClick={goGame}>Game</Nav.Link>}\n            <Nav.Link onClick={goNew}>New</Nav.Link>\n            <Nav.Link onClick={goBlog}>Blog</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport pkg from \"../../../package.json\";\n\nconst versionClass = css`\n  position: absolute;\n  top: 0;\n  right: 0;\n  color: gray;\n  font-size: 85%;\n  z-index: 1000;\n`;\n\nfunction Version() {\n  return (\n    <div className={versionClass}>\n      {pkg.name} (v{pkg.version})\n    </div>\n  );\n}\n\nexport default Version;\n","function getAlert(state) {\n  return state.alert;\n}\n\nexport default getAlert;\n","import React from \"react\";\nimport { css } from \"emotion\";\nimport useSelect from \"../../../lib/useSelect\";\nimport getAlert from \"../selectors/getAlert\";\nimport useDispatch from \"../../../lib/useDispatch\";\nimport Button from \"../../../components/Button\";\nimport { deleteAlert } from \"../actions/deleteAlert\";\n\nconst alertClass = css`\n  background: var(white);\n  color: gray;\n  padding: 0.5em;\n`;\n\nfunction Alert() {\n  const alert = useSelect(getAlert);\n  const dismiss = useDispatch(deleteAlert);\n  if (!alert) return null;\n\n  return (\n    <div className={alertClass} data-testid=\"alert-bar\">\n      {alert.text}\n      <Button onClick={dismiss}>Dismiss</Button>\n    </div>\n  );\n}\n\nexport default Alert;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Version from \"./Version\";\nimport Alert from \"../ducks/alert/components/Alert\";\n\nfunction AppLayout({ children }) {\n  return (\n    <>\n      <Version />\n      <Header />\n      <Alert />\n      {children}\n    </>\n  );\n}\n\nexport default AppLayout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootswatch/dist/solar/bootstrap.css\";\nimport makeApp from \"./makeApp\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst appCompose =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25 });\nconst App = makeApp(undefined, appCompose);\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport createDucksStore from \"./ducks/createDucksStore\";\nimport RootView from \"./views/RootView\";\nimport AppLayout from \"./layout/AppLayout\";\n\nexport default function makeApp(preloadedState, appCompose) {\n  const store = createDucksStore(preloadedState, appCompose);\n  store.dispatch({\n    type: \"game/LOGIN\",\n    playerId: \"sisko\",\n  });\n\n  function App() {\n    return (\n      <Provider store={store}>\n        <AppLayout>\n          <RootView />\n        </AppLayout>\n      </Provider>\n    );\n  }\n  return App;\n}\n"],"sourceRoot":""}